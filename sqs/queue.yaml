---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'SQS: Queue'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentAlertStack
    - Label:
        default: 'Queue Parameters'
      Parameters:
      - QueueName
      - DelaySeconds
      - Encryption
      - KmsDataKeyReusePeriodSeconds
      - MaximumMessageSize
      - MessageRetentionPeriod
      - ReceiveMessageWaitTimeSeconds
      - VisibilityTimeout
      - MaxReceiveCount
Parameters:
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'
    Type: String
    Default: ''
  DelaySeconds:
    Description: 'The time in seconds that the delivery of all messages in the queue is delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.'
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 900
  Encryption:
    Description: 'Enable server side encryption using KMS (customer managed) CMK.'
    Type: String
    Default: false
    AllowedValues: [true, false]
  KmsDataKeyReusePeriodSeconds:
    Description: 'The length of time in seconds that Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again.'
    Type: Number
    Default: 300
    MinValue: 60
    MaxValue: 86400
  MaximumMessageSize:
    Description: 'The limit of how many bytes that a message can contain before Amazon SQS rejects it. You can specify an integer value from 1024 bytes (1 KiB) to 262144 bytes (256 KiB). The default value is 262144 (256 KiB).'
    Type: Number
    Default: 262144
    MinValue: 1024
    MaxValue: 262144
  MessageRetentionPeriod:
    Description: 'The number of seconds that Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days). The default value is 345600 seconds (4 days).'
    Type: Number
    Default: 345600
    MinValue: 60
    MaxValue: 1209600
  QueueName:
    Description: 'A name for the queue. To create a FIFO queue, the name of your FIFO queue must end with the .fifo suffix.'
    Type: String
  ReceiveMessageWaitTimeSeconds:
    Description: 'Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, as opposed to returning an empty response if a message isnt yet available. You can specify an integer from 1 to 20.'
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 20
  VisibilityTimeout:
    Description: 'The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue.'
    Type: Number
    Default: 30
    MinValue: 0
    MaxValue: 43200
  MaxReceiveCount:
    Description: 'The number of times a message is delivered to the source queue before being moved to the dead-letter queue.'
    Type: Number
    Default: 10
    MinValue: 1
Conditions:
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]
  HasEncryption: !Equals [!Ref Encryption, true]
Resources:
  Key:
    Condition: HasEncryption
    Type: 'AWS::KMS::Key'
    Properties:
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          Action: 'kms:*'
          Resource: '*'
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - 'kms:Encrypt'
          - 'kms:Decrypt'
          - 'kms:ReEncrypt*'
          - 'kms:GenerateDataKey*'
          - 'kms:CreateGrant'
          - 'kms:ListGrants'
          - 'kms:DescribeKey'
          Resource: '*'
          Condition:
            StringEquals:
              'kms:CallerAccount': !Ref 'AWS::AccountId'
              'kms:ViaService': !Sub 'sqs.${AWS::Region}.amazonaws.com'
  KeyAlias:
    Condition: HasEncryption
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/${AWS::StackName}'
      TargetKeyId: !Ref Key
  QueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${QueueName}-dlq'
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !If [HasEncryption, !Ref Key, !Ref 'AWS::NoValue']
      KmsDataKeyReusePeriodSeconds: !If [HasEncryption, !Ref KmsDataKeyReusePeriodSeconds, !Ref 'AWS::NoValue']
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref QueueName
      DelaySeconds: !Ref DelaySeconds
      VisibilityTimeout: !Ref VisibilityTimeout
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds
      KmsMasterKeyId: !If [HasEncryption, !Ref Key, !Ref 'AWS::NoValue']
      KmsDataKeyReusePeriodSeconds: !If [HasEncryption, !Ref KmsDataKeyReusePeriodSeconds, !Ref 'AWS::NoValue']
      RedrivePolicy:
        maxReceiveCount: !Ref MaxReceiveCount
        deadLetterTargetArn: !GetAtt QueueDLQ.Arn
  AutoScalingGroupLifecycleHookQueueTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Queue contains messages older than 10 minutes, messages are not consumed'
      Namespace: 'AWS/SQS'
      MetricName: ApproximateAgeOfOldestMessage
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 600
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: QueueName
        Value: !GetAtt 'Queue.QueueName'
  AutoScalingGroupLifecycleHookDeadLetterQueueTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Dead letter queue contains messages, message processing failed'
      Namespace: 'AWS/SQS'
      MetricName: ApproximateNumberOfMessagesVisible
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: QueueName
        Value: !GetAtt 'QueueDLQ.QueueName'
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id.'
    Value: 'sqs/queue'
  TemplateVersion:
    Description: 'cloudonaut.io template version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  Queue:
    Description: 'SQS Queue'
    Value: !Ref Queue
    Export:
      Name: !Sub '${AWS::StackName}-Queue'


